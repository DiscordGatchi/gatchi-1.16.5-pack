name: Package
on: [push]

jobs:
  mods:
    name: Package Mods
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: oracle
          java-version: 17
          java-package: jdk

      - name: Serve toml files
        uses: Eun/http-server-action@v1
        with:
          directory: ${{ github.workspace }}
          port: 8080
          no-cache: true
          content-types: |
            { "toml": "text/plain" }

      - name: Get server mods
        run: |
          mkdir server && cd server
          java -jar ../packwiz-installer-bootstrap.jar -g -s server http://localhost:8080/pack.toml

      - name: Get client mods
        run: |
          mkdir client && cd client
          java -jar ../packwiz-installer-bootstrap.jar -g -s both http://localhost:8080/pack.toml

      - name: Upload server mods
        uses: actions/upload-artifact@v3
        with:
          name: server
          path: server/

      - name: Upload client mods
        uses: actions/upload-artifact@v3
        with:
          name: client
          path: client/

  test:
    name: Test Server & Generate Config
    runs-on: ubuntu-latest
    needs: mods

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download server mods
        uses: actions/download-artifact@v3
        with:
          name: server
          path: server/

      - name: Run server
        run: |
          docker run \
          -v $(pwd)/server:/data \
          -e TYPE=FABRIC \
          -e VERSION=1.18.2 \
          -e MEMORY=4G \
          -e ENABLE_AUTOSTOP=TRUE \
          -e AUTOSTOP_TIMEOUT_INIT=1 \
          -e EULA=TRUE \
          itzg/minecraft-server

      - name: Check server folder
        run: ls server

  release:
    name: Release & Upload Zipped Mod Files
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          # Change this to our official release branch later (probably default/main)
          release_branches: 'feat/packwiz/docker-and-server-deploy'

      - name: Download server mods
        uses: actions/download-artifact@v3
        with:
          name: server
          path: server/

      - name: Download client mods
        uses: actions/download-artifact@v3
        with:
          name: client
          path: client/

      - name: Zip server
        run: zip -r server.zip server/

      - name: Zip client
        run: zip -r client.zip client/

      - name: Create a GitHub release
        uses: ncipollo/release-action@v1
        id: create_release
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}

      - name: Update the pack.toml version
        uses: colathro/toml-editor@1.1.0
        with:
          file: "pack.toml"
          key: "version"
          value: ${{ steps.tag_version.outputs.new_version || steps.tag_version.outputs.previous_version }}

      - name: Upload server mods
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./server.zip
          asset_name: server.zip
          asset_content_type: application/zip

      - name: Upload client mods
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./client.zip
          asset_name: client.zip
          asset_content_type: application/zip

      - name: Commit updated pack.toml
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "Bump pack.toml version to ${{ steps.tag_version.outputs.new_version || steps.tag_version.outputs.previous_version }}"
          commit_options: "--no-verify"
          commit_user_name: "GitHub Actions"
          commit_user_email: "github-actions[bot]@users.noreply.github.com"
          commit_author: "GitHub Actions <github-actions[bot]@users.noreply.github.com>"
          file_pattern: "pack.toml"

      - name: Failure Cleanup - Remove Tag & Release
        if: failure()
        uses: dev-drprasad/delete-tag-and-release@v0.2.0
        with:
          tag_name: ${{ steps.tag_version.outputs.new_tag }}
          delete_release: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}